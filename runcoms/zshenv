#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# Disable Prezto safe-ops
zstyle ':prezto:module:utility' safe-ops 'no'

#PYENV Setup
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH:$HOME/.poetry/bin"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

export GPG_TTY=$(tty)

# from /home/yokley/.bashrc
export J2SDKDIR=/usr/lib/jvm/oracle_jdk8
export J2REDIR=/usr/lib/jvm/oracle_jdk8/jre
export PATH=$PATH:/usr/lib/jvm/oracle_jdk8/bin:/usr/lib/jvm/oracle_jdk8/db/bin:/usr/lib/jvm/oracle_jdk8/jre/bin
export JAVA_HOME=/usr/lib/jvm/oracle_jdk8
export DERBY_HOME=/usr/lib/jvm/oracle_jdk8/db

export VT_SHOW_TRACEBACK=true
export VT_DEFAULT_LIST=personal
export VT_PROXY=''
export VT_URL='https://almagest.dyndns.org:7001/vittlify/'

export BROWSER='vivaldi'

export PYENV_VIRTUALENV_DISABLE_PROMPT=1

almagest=(-h almagest.dyndns.org -U yokley)
export PATH=$PATH:~/.cabal/bin
export PATH=$PATH:/usr/local/go/bin

export COMPOSE_HTTP_TIMEOUT=180

alias google-chrome='google-chrome --disable-gpu-compositing'
# and/or you can set the django settings module with an environment setting
# export DJANGO_SETTINGS_MODULE='dev_settings'

# Custom git command
alias git-scrub='git branch --merged | grep -v master | xargs git branch -d'

# Alias docker commands
alias krill='docker run --rm -it kyokley/krill'
alias vt="docker run --rm \
                     -it \
                     -v ~/.ssh:/root/.ssh \
                     --env VT_URL=$VT_URL \
                     --env VT_USERNAME=yokley \
                     --env VT_DEFAULT_LIST=$VT_DEFAULT_LIST \
                     --env VT_PROXY=$VT_PROXY \
                     --net=host \
                     kyokley/vt"
alias color_git_blame="docker run --rm \
                                  -i \
                                  kyokley/color_blame \
                                  color_git_blame"
alias color_svn_blame="docker run --rm \
                                  -i \
                                  kyokley/color_blame \
                                  color_svn_blame"
alias neomutt="docker run -it --rm --name mutt -e TERM \
                          -v $HOME/.mutt/muttrc:/home/user/.neomuttrc:rw \
                          -v $HOME/.msmtprc:/home/user/.msmtprc:ro \
                          -v /etc/localtime:/etc/localtime:ro \
                          -v $HOME/.mutt/header_cache:/home/user/.mutt/header_cache:rw \
                          -v $HOME/.mutt/body_cache:/home/user/.mutt/body_cache \
                          -v $HOME/.mutt/password:/home/user/.mutt/password \
                          kyokley/neomutt"

# May be necessary to run "xhost +" before the following will work
alias proton_chromium="xhost + && docker run -it --rm \
                                  --cpuset-cpus 0 \
                                  --memory 512mb \
                                  -v /tmp/.X11-unix:/tmp/.X11-unix \
                                  -e DISPLAY=unix$DISPLAY \
                                  -v $HOME/Downloads:/home/chromium/Downloads \
                                  -v $HOME/.config/chromium/:/data \
                                  --security-opt seccomp=$HOME/chrome_sec.json \
                                  --device /dev/snd \
                                  -v /dev/shm:/dev/shm \
                                  --name chromium \
                                  --device /dev/net/tun \
                                  --cap-add=NET_ADMIN \
                                  kyokley/proton_chromium"

alias sqlparse="docker run --rm \
                           -i \
                           kyokley/sqlparse"

alias open='xdg-open'
alias vimdiff='vim -d'

docker-vivaldi(){
    xhost +
    docker run --rm -it -d \
        --memory 4gb \
        --shm-size=2g \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=unix$DISPLAY \
        --security-opt seccomp:${HOME}/chrome_sec.json \
        --privileged \
        --device /dev/snd \
        -v /dev/shm:/dev/shm \
        --device /dev/net/tun \
        --cap-add=NET_ADMIN \
        -v ${HOME}/.cache/vivaldi:/home/vivaldi/.cache/vivaldi \
        -v ${HOME}/.config/vivaldi:/home/vivaldi/.config/vivaldi \
        -v ${HOME}/.vivaldi/pki:/home/vivaldi/.pki \
        -v ${HOME}/Downloads:/home/vivaldi/Downloads \
        --name vivaldi \
        kyokley/vivaldi "$@"
}

dvim() {
    docker run \
        --rm -it \
        -v $(pwd):/files \
        kyokley/neovim:latest \
        "$@"
       }

psql() {
    touch $HOME/.psql_history
    docker run \
        --rm -it \
        --net=host \
        -e "PGTZ=America/Chicago" \
        -e "PSQL_HISTORY=/root/.psql_history" \
        -v "$HOME/.psql_history:/root/.psql_history" \
        -v "/tmp:/tmp" \
        kyokley/psql \
        "$@"
}

pgcli() {
    mkdir -p $HOME/.config/pgcli
    touch $HOME/.config/pgcli/history
    docker run \
        --rm -it \
        --net=host \
        -e UID="$(id | grep -Po '(?<=uid=)\d+')" \
        -e GID="$(id | grep -Po '(?<=gid=)\d+')" \
        -e "PGTZ=America/Chicago" \
        -v "$HOME/.config/pgcli/history:/root/.config/pgcli/history" \
        -v "/tmp:/tmp" \
        kyokley/pgcli \
        "$@"
}

pg_dump() {
    docker run \
        --rm -it \
        --net=host \
        -e "PGTZ=America/Chicago" \
        --entrypoint "pg_dump" \
        kyokley/psql \
        "$@"
}

# This function is specially designed to accept a db dump on stdin
# and load it into a database
pg_load(){
    docker run \
        --rm -i \
        --net=host \
        kyokley/psql \
        "$@"
}


createdb() {
    docker run \
        --rm -it \
        --net=host \
        -e "PGTZ=America/Chicago" \
        --entrypoint "createdb" \
        kyokley/psql \
        "$@"
}

dropdb() {
    docker run \
        --rm -it \
        --net=host \
        -e "PGTZ=America/Chicago" \
        --entrypoint "dropdb" \
        kyokley/psql \
        "$@"
}

diffr() {
    docker run --rm -i kyokley/diffr "$@" | less -R
}

diff-so-fancy() {
    docker run --rm -i kyokley/diff-so-fancy "$@" 2>/dev/null | less -R
}
alias dsf='diff-so-fancy'

delta() {
    docker run --rm -i kyokley/delta "$@" 2>/dev/null | less -R
}

lockbox() {
    UID="$(id | grep -Po '(?<=uid=)\d+')"
    GID="$(id | grep -Po '(?<=gid=)\d+')"
    docker run \
           --rm -it \
           -u $UID:$GID \
           -v $(pwd):/files \
           kyokley/lockbox "$@"
}

qw() {
    UID="$(id | grep -Po '(?<=uid=)\d+')"
    GID="$(id | grep -Po '(?<=gid=)\d+')"
    docker run \
           --rm -it \
           -u $UID:$GID \
           kyokley/quick-word "$@"
}

cycle_home(){
    cycle_bluetooth '04:5D:4B:EA:71:6D'
}
cycle_work(){
    cycle_bluetooth 'AC:9B:0A:14:AA:EA'
}

# Some commands to open github pages
gh-url(){
    # Borrowed bits of the following from:
    # https://github.com/oguzbilgic/dotfiles/blob/master/config/fish/functions/gh.fish

    origin=$(git remote get-url origin)
    repo=$(echo $origin | python -c "import sys; url = sys.stdin.readline().strip(); print(url.split(':')[1][:-4])")
    echo "https://github.com/$repo"
}
gh(){
    xdg-open $(gh-url) 2>&1 > /dev/null &
}
gh-pr(){
    xdg-open "$(gh-url)/pulls" 2>&1 > /dev/null &
}

lazydocker(){
    mkdir -p $HOME/.config/lazydocker
    docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock \
                        -v ~/.config/lazydocker:/.config/jesseduffield/lazydocker \
                        lazyteam/lazydocker
}

calories(){
    docker run --rm -it -v /home/yokley/.config/calories/calories.db:/root/calories.db -v /home/yokley/.config/calories/caloriesconf:/go/bin/.caloriesconf kyokley/calories "$@"
}

function chpwd(){
    export GIT_BASE='master'
    if [ -r $PWD/.zsh_config ]; then
        source $PWD/.zsh_config
    fi
}


alias asciicast2gif='docker run --rm -v $PWD:/data asciinema/asciicast2gif'

setopt NO_NOMATCH

# Source private env vars.
if [ -f "$HOME/.zpriv" ]; then
    source "$HOME/.zpriv"
fi
